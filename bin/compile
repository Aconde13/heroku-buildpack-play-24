#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

# chdir to handle relative paths
cd $BUILD_DIR

# unpack cache
for DIR in ".play" ".lib"; do
  rm -rf $DIR
  if [ -d $CACHE_DIR/$DIR ]; then
    cp -r $CACHE_DIR/$DIR $DIR
  fi
done

# install play with base repository
PLAY_URL="https://s3-us-west-1.amazonaws.com/language-pack-play/play-heroku.tar.gz"

check_compile_status()
{
  if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to build Play! application"
    exit 1
  fi
}

if [ ! -d .play ]; then
  echo -n "-----> Installing play!....."
  curl --silent --max-time 90 --location $PLAY_URL | tar xz
  check_compile_status
  chmod +x .play/play
  echo " done"
fi

if [ ! -f Procfile ]; then
  cat <<EOF > Procfile
web:    play run --http.port=\$PORT
EOF
  echo "-----> No Procfile found. Will use Procfile: "
  cat Procfile | sed -u 's/^/       /' 
fi

# build app
echo "-----> Building Play! application..."
# precompile each application represented by an application.conf file
for DIR in $(find -wholename "*/conf/application.conf" ! -wholename "*modules*" -type f | sed 's/conf\/application.conf//')
do
  PRECOMPILE_CMD=".play/play precompile $DIR --deps 2>&1"
  echo "       Resolving dependencies and precompiling: $PRECOMPILE_CMD" 
  eval "$PRECOMPILE_CMD" | sed -u 's/^/       /'
  check_compile_status
done

# repack cache
mkdir -p $CACHE_DIR
for DIR in ".play"; do
  rm -rf $CACHE_DIR/$DIR
  cp -r $DIR $CACHE_DIR/$DIR
done
