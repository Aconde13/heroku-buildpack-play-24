#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

# chdir as maven expects
cd $BUILD_DIR

# unpack cache
for DIR in ".play"; do
  rm -rf $DIR
  if [ -d $CACHE_DIR/$DIR ]; then
    cp -r $CACHE_DIR/$DIR $DIR
  fi
done

# install play with base repository
PLAY_URL="http://s3.amazonaws.com/lang-pack-play/play-1.2.1.tar.gz"

if [ ! -d .play ]; then
  echo -n "-----> Installing play!....."
  curl --silent --max-time 60 --location $PLAY_URL | tar xz
  chmod +x .play/play
  echo " done"
fi

if [ ! -f Procfile ]; then
  cat <<EOF > Procfile
web:    play run --http.port=\$PORT
EOF
  echo "No Procfile found. Will use Procfile: "
  cat Procfile | sed -u 's/^/       /' 
fi

# Append a db URL prod parameter to application.conf if it's not already there

if ! grep -q -E '^([^#]*)%prod\.db\.url' conf/application.conf ; then
    echo "%prod.db.url=\${database.jdbc.url}" >> conf/application.conf
    echo "      No %prod.db.url parameter found in conf/application.conf. Adding parameter:"
    echo "      %prod.db.url=\${database.jdbc.url}"
fi

# Append a db driver prod parameter to application.conf if it's not already there

if ! grep -q -E '^([^#]*)%prod\.db\.driver' conf/application.conf ; then
    echo "%prod.db.driver=org.postgresql.Driver" >> conf/application.conf
    echo "      No %prod.db.driver parameter found in conf/application.conf. Adding parameter:"
    echo "      %prod.db.driver=org.postgresql.Driver"
    if [ ! -e lib/postgres* ] ; then 
        cp .lib/postgres*.jar lib/.
        echo "      Added postgres JDBC driver lib to application: `ls lib | grep postgres`"
    fi
fi

# Append a hibernate ddl strategy parameter to application.conf if it's not already there

if ! grep -q -E '^([^#]*)%prod\.jpa\.ddl' conf/application.conf ; then
    echo "%prod.jpa.ddl=update" >> conf/application.conf
    echo "      No %prod.jpa.ddl parameter found in conf/application.conf. Adding parameter:"
    echo "      %prod.jpa.ddl=update"
fi


# build app
echo "-----> Resolving dependencies and precompiling play! app..."
.play/play precompile --deps 2>&1 | sed -u 's/^/       /'
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build Play app"
  exit 1
fi

# repack cache
mkdir -p $CACHE_DIR
for DIR in ".play"; do
  rm -rf $CACHE_DIR/$DIR
  cp -r $DIR $CACHE_DIR/$DIR
done
